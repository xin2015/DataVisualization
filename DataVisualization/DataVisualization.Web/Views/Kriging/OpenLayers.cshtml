@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta name="keywords" content="OpenLayers" />
    <title>OpenLayers</title>
    <link rel="stylesheet" href="https://openlayers.org/en/v4.6.5/css/ol.css" type="text/css">
    <script src="https://openlayers.org/en/v4.6.5/build/ol.js"></script>
    <style type="text/css">
        body, html {
            width: 100%;
            height: 100%;
            margin: 0;
            font-family: "Microsoft YaHei"
        }

        .mapDiv {
            width: 100%;
            height: 100%;
            float: left;
        }
    </style>
</head>
<body>
    <div class="mapDiv" id="mapDiv"></div>
    <script src="~/Scripts/kriging/kriging.xin.js"></script>
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script type="text/javascript">
        var params = {
            mapCenter: [104.2, 37.8],
            zoom: 5,
            krigingModel: 'exponential',//'exponential','gaussian','spherical'
            krigingSigma2: 0,
            krigingAlpha: 100,
            canvasAlpha: 0.8,//canvas图层透明度
            colors: ["#00E400", "#FFFF00", "#FF7E00", "#FF0000", "#99004C", "#7E0023"]
        };
        var chinaExtent = [73.3, 17.5, 135.1, 53.7];
        var loni = chinaExtent[0], lati = chinaExtent[1], lona = chinaExtent[2], lata = chinaExtent[3];
        var map = new ol.Map({
            target: 'mapDiv',
            layers: [
                new ol.layer.Tile({
                    source: new ol.source.OSM()
                })
            ],
            view: new ol.View({
                //center: ol.proj.fromLonLat(params.mapCenter),
                center: params.mapCenter,
                projection: 'EPSG:4326',
                zoom: params.zoom
            })
        });
        var data = [];
        $.ajax({
            url: "/Home/GetStationHourData",
            success: function (a, b, c) {
                var lnga = 135, lngi = 74, lata = 54, lati = 18;
                for (var i = lngi; i < lnga; i += 1) {
                    for (var j = lati; j < lata; j += 1) {
                        var lngi = i + 1;
                        var latj = j + 1;
                        var count = 0, lngm = 0, latm = 0, valuem = 0;
                        for (var k in a) {
                            var item = a[k];
                            if (item.AQI != "—") {
                                var longitude = item.Longitude - 0;
                                var latitude = item.Latitude - 0;
                                var value = item.AQI - 0;
                                if (longitude >= i && longitude < lngi && latitude >= j && latitude < latj) {
                                    count++;
                                    lngm += longitude;
                                    latm += latitude;
                                    valuem += value;
                                }
                            }
                        }
                        if (count > 0) {
                            data.push([lngm / count, latm / count, valuem / count]);
                        }
                    }
                }

                //for (var i = 0; i < a.length; i++) {
                //    var item = a[i];
                //    if (item.AQI != "—") {
                //        var longitude = item.Longitude - 0;
                //        var latitude = item.Latitude - 0;
                //        var value = item.AQI - 0;
                //        data.push([longitude, latitude, value]);
                //    }
                //}

                InitCanvas();
            }
        });

        function InitCanvas() {
            var lngs = [], lats = [], values = [];
            for (var i = 0; i < data.length; i++) {
                lngs.push(data[i][0]);
                lats.push(data[i][1]);
                values.push(data[i][2]);
            }
            console.time("train");
            var variogram = kriging.train(values, lngs, lats, params.krigingModel, params.krigingSigma2, params.krigingAlpha);
            console.timeEnd("train");
            console.time("grid");
            var grid = kriging.grid([[[loni, lati], [loni, lata], [lona, lata], [lona, lati]]], variogram, 1 / 10);
            console.timeEnd("grid");
            var imageLayer = new ol.layer.Image({
                source: new ol.source.ImageCanvas({
                    canvasFunction: (extent, resolution, pixelRatio, size, projection) => {
                        console.time("update");
                        var canvas = document.createElement('canvas');
                        canvas.width = size[0];
                        canvas.height = size[1];
                        var ctx = canvas.getContext("2d");
                        ctx.globalAlpha = params.canvasAlpha;
                        //var nwPoint = ol.proj.toLonLat(map.getCoordinateFromPixel([0, 0]));
                        //var sePoint = ol.proj.toLonLat(map.getCoordinateFromPixel([canvas.width, canvas.height]));
                        var nwPoint = map.getCoordinateFromPixel([0, 0]);
                        var sePoint = map.getCoordinateFromPixel([canvas.width, canvas.height]);
                        kriging.plot(canvas, grid, [nwPoint[0], sePoint[0]], [sePoint[1], nwPoint[1]], params.colors);
                        console.timeEnd("update");
                        return canvas;
                    },
                    ratio: 1
                }),
                map: map
            });
        }
    </script>
</body>
</html>
