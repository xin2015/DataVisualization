
@{
    ViewBag.Title = "Index";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ECharts</title>
    <style>
        body, html {
            width: 100%;
            height: 100%;
            margin: 0;
            font-family: "Microsoft YaHei"
        }

        #main {
            width: 100%;
            height: 100%;
        }
    </style>
</head>
<body>
    <div id="main"></div>
    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script type="text/javascript" src="//api.map.baidu.com/api?v=3.0&ak=E4805d16520de693a3fe707cdc962045"></script>
    <script src="~/Scripts/echarts/echarts.js"></script>
    <script src="~/Scripts/echarts/extension/bmap.js"></script>
    <script type="text/javascript">
        var myChart = echarts.init(document.getElementById('main'));
        var COLORS = ["#070093", "#1c3fbf", "#1482e5", "#70b4eb", "#b4e0f3", "#ffffff"];
        var lngExtent = [73.4, 135.2];
        var latExtent = [18.1, 53.6];
        var cellCount = [100, 100];
        var cellSizeCoord = [
            (lngExtent[1] - lngExtent[0]) / cellCount[0],
            (latExtent[1] - latExtent[0]) / cellCount[1]
        ];
        var data = [];
        for (var i = 0; i < cellCount[0]; i++) {
            for (var j = 0; j < cellCount[1]; j++) {
                data.push([i, j, Math.floor(Math.random() * 6)]);
            }
        }

        function renderItem(params, api) {
            var lngIndex = api.value(0);
            var latIndex = api.value(1);
            var pointLeftTop = api.coord([lngExtent[0] + lngIndex * cellSizeCoord[0], latExtent[1] - latIndex * cellSizeCoord[1]]);
            var pointRightBottom = api.coord([lngExtent[0] + (lngIndex + 1) * cellSizeCoord[0], latExtent[1] - (latIndex + 1) * cellSizeCoord[1]]);
            return {
                type: 'rect',
                shape: {
                    x: pointLeftTop[0],
                    y: pointLeftTop[1],
                    width: pointRightBottom[0] - pointLeftTop[0],
                    height: pointRightBottom[1] - pointLeftTop[1]
                },
                style: api.style({
                    stroke: 'rgba(0,0,0,0.1)'
                }),
                styleEmphasis: api.styleEmphasis()
            };
        }

        option = {
            tooltip: {},
            visualMap: {
                type: 'piecewise',
                inverse: true,
                top: 10,
                left: 10,
                pieces: [{
                    value: 0, color: COLORS[0]
                }, {
                    value: 1, color: COLORS[1]
                }, {
                    value: 2, color: COLORS[2]
                }, {
                    value: 3, color: COLORS[3]
                }, {
                    value: 4, color: COLORS[4]
                }, {
                    value: 5, color: COLORS[5]
                }],
                borderColor: '#ccc',
                borderWidth: 2,
                backgroundColor: '#eee',
                dimension: 2,
                inRange: {
                    color: COLORS,
                    opacity: 0.7
                }
            },
            series: [
                {
                    type: 'custom',
                    coordinateSystem: 'bmap',
                    renderItem: renderItem,
                    animation: false,
                    emphasis: {
                        itemStyle: {
                            color: 'yellow'
                        }
                    },
                    encode: {
                        tooltip: 2
                    },
                    data: data
                }
            ],
            bmap: {
                center: [107.123407, 36.028857],
                zoom: 6,
                roam: true,
                mapStyle: {
                    styleJson: [{
                        'featureType': 'water',
                        'elementType': 'all',
                        'stylers': {
                            'color': '#d1d1d1'
                        }
                    }, {
                        'featureType': 'land',
                        'elementType': 'all',
                        'stylers': {
                            'color': '#f3f3f3'
                        }
                    }, {
                        'featureType': 'railway',
                        'elementType': 'all',
                        'stylers': {
                            'visibility': 'off'
                        }
                    }, {
                        'featureType': 'highway',
                        'elementType': 'all',
                        'stylers': {
                            'color': '#999999'
                        }
                    }, {
                        'featureType': 'highway',
                        'elementType': 'labels',
                        'stylers': {
                            'visibility': 'off'
                        }
                    }, {
                        'featureType': 'arterial',
                        'elementType': 'geometry',
                        'stylers': {
                            'color': '#fefefe'
                        }
                    }, {
                        'featureType': 'arterial',
                        'elementType': 'geometry.fill',
                        'stylers': {
                            'color': '#fefefe'
                        }
                    }, {
                        'featureType': 'poi',
                        'elementType': 'all',
                        'stylers': {
                            'visibility': 'off'
                        }
                    }, {
                        'featureType': 'green',
                        'elementType': 'all',
                        'stylers': {
                            'visibility': 'off'
                        }
                    }, {
                        'featureType': 'subway',
                        'elementType': 'all',
                        'stylers': {
                            'visibility': 'off'
                        }
                    }, {
                        'featureType': 'manmade',
                        'elementType': 'all',
                        'stylers': {
                            'color': '#d1d1d1'
                        }
                    }, {
                        'featureType': 'local',
                        'elementType': 'all',
                        'stylers': {
                            'color': '#d1d1d1'
                        }
                    }, {
                        'featureType': 'arterial',
                        'elementType': 'labels',
                        'stylers': {
                            'visibility': 'off'
                        }
                    }, {
                        'featureType': 'boundary',
                        'elementType': 'all',
                        'stylers': {
                            'color': '#fefefe'
                        }
                    }, {
                        'featureType': 'building',
                        'elementType': 'all',
                        'stylers': {
                            'color': '#d1d1d1'
                        }
                    }, {
                        'featureType': 'label',
                        'elementType': 'labels.text.fill',
                        'stylers': {
                            'color': 'rgba(0,0,0,0)'
                        }
                    }]
                }
            }
        };

        myChart.setOption(option);
    </script>
</body>
</html>